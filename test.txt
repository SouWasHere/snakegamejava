System Manual: Java Snake Game
System Title:
Snake Game with Obstacles and Menu Interface

1. System Overview
The Snake Game is a classic arcade-style game developed in Java using the Swing library and NetBeans IDE. The player controls a snake to eat fruits, which increases its length and score. Obstacles are added every time a fruit is consumed, increasing difficulty. The game includes a main menu, restart function, and navigation options.

2. System Features
Main Menu

Displayed at the start with the title and a Start Game button.

Gameplay

Control the snake using arrow keys (↑, ↓, ←, →).

Eat apples to grow in length and gain points.

A new obstacle appears every time the snake eats a fruit.

Collision with walls, self, or obstacles results in Game Over.

Game Over Screen

Shows the final score.

Includes Restart and Back to Menu buttons.

Obstacles

Randomly placed on the field.

Avoid these to continue playing.

3. System Requirements
IDE: NetBeans (recommended)

JDK: Java SE Development Kit 8 or later

Libraries Used: javax.swing, java.awt

4. Installation and Setup
Open NetBeans IDE.

Create a new Java Application Project.

Add a new Java Class File named GamePanel.java.

Paste the entire provided GamePanel code into this file.

Create a SnakeGame.java file (if not yet created) with the following content to run the game:

java
Copy
Edit
import javax.swing.JFrame;

public class SnakeGame {
    public static void main(String[] args) {
        JFrame frame = new JFrame();
        GamePanel gamePanel = new GamePanel();

        frame.add(gamePanel);
        frame.setTitle("Snake Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }
}
Run the SnakeGame file to start the program.

5. User Controls

Key	Action
↑	Move Up
↓	Move Down
←	Move Left
→	Move Right
6. Gameplay Rules
The snake starts moving to the right.

The game ends if:

The snake hits the wall.

The snake hits its own body.

The snake collides with an obstacle.

7. Developer Notes
New obstacles are generated away from the snake’s body and apple location.

Game buttons (Start, Restart, Back to Menu) are handled with Swing JButtons.

The GamePanel uses null layout for button positioning.